server:
  port: ${SERVER_PORT:9000}
  servlet:
    context-path: /
  error:
    path: /error
    whitelabel:
      enabled: false
  ssl:
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-alias: ${SSL_KEY_ALIAS:}
    enabled: ${SSL_ENABLED:false}

spring:
  jmx:
    enabled: true
    default_domain: Kafdrop
  jackson:
    deserialization:
      fail_on_unknown_properties: false
      read_unknown_enum_values_as_null: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: kafdrop
            client-secret: upmbA9uWdyU3FMHw1CKpeXFDBySHhA06
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
            authorization-uri: http://localhost:8321/realms/delta-inspira/protocol/openid-connect/auth
            token-uri: http://localhost:8321/realms/delta-inspira/protocol/openid-connect/token
            user-info-uri: http://localhost:8321/realms/delta-inspira/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8321/realms/delta-inspira/protocol/openid-connect/certs
            logout-uri: http://localhost:8321/realms/delta-inspira/protocol/openid-connect/logout
        provider:
          keycloak:
            issuer-uri: http://localhost:8321/realms/delta-inspira
management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: "*"
  server:
    port: 9000

kafdrop.monitor:
  clientId: Kafdrop

kafka:
  brokerConnect: localhost:9092
  saslMechanism: "PLAIN"
  securityProtocol: "SASL_PLAINTEXT"
  truststoreFile: "${KAFKA_TRUSTSTORE_FILE:kafka.truststore.jks}"
  propertiesFile : "${KAFKA_PROPERTIES_FILE:kafka.properties}"
  keystoreFile: "${KAFKA_KEYSTORE_FILE:kafka.keystore.jks}"
